<?xml version="1.0" encoding="UTF-8"?>
<!-- 在src目录下新建spring.xml文件，这是Spring的配置文件，其作用 -->
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="  
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
      <!--  通过注解，将Service的生命周期纳入Spring的管理 -->
      <context:annotation-config/><!-- 启动基于annotation的DI管理  -->
      <!--  <context:component-scan base-package="com.ssmlogin.service"></context:component-scan> -->
      <!-- 引入propertise文件 -->
       <context:property-placeholder location="classpath:db.properties"/>
      <!-- 配置数据源
      -->
      <bean id = "dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
     <!--  <bean id = "dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  -->
       <property name="driverClass" value="${DRIVER_CLASS}"/>
           <!-- <value>com.mysql.jdbc.Driver</value>
       </property> -->
       <property name="jdbcUrl"  value="${DRIVER_URL}"/>
            <!-- <value>jdbc:mysql://localhost:3306/dong?characterEncoding=UTF-8</value>
       </property> -->
       <property name="user"  value="${DRIVER_USER}"/>
            <!-- <value>root</value>
       </property> -->
       <property name="password"  value="${DRIVER_PWD}"/>
            <!-- <value>1174</value>
       </property> -->
     </bean>
     
     
      <!--扫描存放SQL语句的UserDao.xml/ 配置mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 -->
     <bean id= "sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="typeAliasesPackage" value = "com.ssmlogin.bean"></property>
       <property name="dataSource" ref="dataSource"></property>
       <property name="mapperLocations" value="classpath:com/ssmlogin/dao/*.xml"></property>
     </bean>
       <!-- 扫描Mapper，并将其生命周期纳入Spring的管理 /自动扫描mybatis映射文件和接口的包-->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="com.ssmlogin.dao"></property>
     
     </bean>
      <!--.配置事务管理器  --> 
      <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
        <property name="dataSource" ref="dataSource"></property>
      </bean>
      <!--5.开启注解进行事务管理   transaction-manager：引用上面定义的事务管理器-->
      <tx:annotation-driven transaction-manager="transactionManager"/>  
</beans>
     